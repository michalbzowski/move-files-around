version: "3.8"

services:
  file_watcher:
    build: ./watcher-app
    container_name: file_watcher
    volumes:
      - ./directories/test_dir/input:/input
      - ./directories/test_dir/processing:/processing
      - ./directories/test_dir/processed:/processed
      - ./directories/test_dir/unprocessable:/unprocessable
      - ./directories/test_dir/tmp:/tmp
      - ./directories/test_dir/working_copy:/working_copy
      - ./directories/test_dir/bin:/bin
      - ./directories/test_dir/all_media:/all_media
      #- ./directories/test_dir/additional_01:/additional_01
      #- ./directories/test_dir/additional_02:/additional_02
    environment:
      INPUT_DIR: "/input"
      PROCESSING_DIR: "/processing"
      PROCESSED_DIR: "/processed"
      UNPROCESSABLE_DIR: "/unprocessable"
      TMP_DIR: "/tmp"
      WORKING_COPY_DIR: "/working_copy"
      BIN_DIR: "/bin"
      ALL_MEDIA_DIR: "/all_media"
      ADDITIONAL_DIRS: ""#"/additional_01,/additional_02" #example "/additional_01,/additional_02" ## comma separated names must match volumes above. Then all files from those dirs will be moved to input
      ## above must be followed by matching volume in volume section eg: - ./directories/test_dir/additional:/additional_01
      CONFIG_FILE: "rules.json"
      INPUT_POLL_INTERVAL: "60"  # w sekundach, zmie≈Ñ wg potrzeby
    restart: unless-stopped
  webapp:
    build: ./working-copy-view
    container_name: webapp
    ports:
      - "5001:5000"        # mapowanie portu na hosta
    volumes:
      - ./directories/test_dir/working_copy:/working_copy
      - ./directories/test_dir/bin:/bin
      - ./directories/test_dir/all_media:/all_media
      - ./directories/clip_download_root:/clip_download_root
    environment:
      WORKING_COPY_DIR: "/working_copy"
      BIN_DIR: "/bin"
      ALL_MEDIA_DIR: "/all_media"
      CLIP_DOWNLOAD_ROOT: "/clip_download_root"
    restart: unless-stopped
